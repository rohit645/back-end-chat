{"version":3,"sources":["components/activeUsers.js","pages/chat.js","components/messages.js","pages/join.js","App.js","index.js"],"names":["ActiveUsers","react_default","a","createElement","className","id","this","props","users","map","user","index","key","Component","socket","Messages","_this","messages","filter","message","room","url","from","href","rel","target","createdDate","text","initialState","newMsg","fetchingLocation","Chat","Object","classCallCheck","_super","call","state","objectSpread","param","match","params","emit","setState","_this2","scopeThis","name","io","err","history","push","on","formattedTime","moment","format","results","length","scrollToBottom","console","log","listHeight","document","querySelector","messagesList","newMessage","messagesWrapperHeight","clientHeight","scrollTop","scrollHeight","offsetHeight","previousSibling","scrollTo","e","value","defineProperty","preventDefault","obj","data","clearForm","navigator","geolocation","alert","getCurrentPosition","pos","lat","coords","latitude","lon","longitude","_this3","dist_default","loading","bgColor","spinnerColor","textColor","activeUsers","Link","to","onSubmit","placeholder","autoComplete","onChange","inputUpdate","bind","type","onClick","sendLocation","withRouter","Join","_this$state","concat","join","App","site_loaded","classNames","BrowserRouter","Switch","Route","path","component","ReactDOM","render","src_App","getElementById"],"mappings":"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","file":"static/js/main.0327abd0.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass ActiveUsers extends Component {\n    render() {\n        return (\n            <div className=\"activeUsers\">\n                <h2 className=\"headline\">\n                    Active users\n                </h2>\n                <div id=\"users\">\n                    <ul>\n                        {this.props.users.map((user, index) => (\n                            <li key={index}>\n                                <i className=\"fas fa-circle\"></i>\n                                <span>\n                                    {user}\n                                </span>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default ActiveUsers;","import React, { Component } from 'react';\nimport { withRouter, Link } from 'react-router-dom';\nimport io from 'socket.io-client';\nimport ActiveUsers from './../components/activeUsers';\nimport Messages from './../components/messages';\nimport moment from 'moment';\nimport LoadingScreen from 'react-loading-screen';\n\nvar socket;\nconst initialState = {\n    users: [],\n    messages: [],\n    newMsg: '',\n    fetchingLocation: false\n}\n\nclass Chat extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            ...initialState\n        }\n    }\n\n    componentWillUnmount(){\n        const param = {\n            room: this.props.match.params.room\n        }\n        socket.emit('leave', param);\n        this.setState({...initialState});\n    }\n\n    componentDidMount() {\n        const scopeThis = this;\n        const params = {\n            name: this.props.match.params.name,\n            room: this.props.match.params.room\n        }\n\n        socket = io('http://localhost:8080')\n\n        socket.emit('join', params, function (err) {\n            if (err) {\n                this.props.history.push('/');\n            }\n        });\n\n        socket.on('updateUserList', function (users) {\n            scopeThis.setState({\n                users\n            });\n        });\n\n        socket.on('newMessage', (message) => {\n            var formattedTime = moment(message.createdDate).format('h:mm a');\n            let newMsg = {\n                text: message.text,\n                from: message.from,\n                room: message.room,\n                createdDate: formattedTime\n            }\n            let results = scopeThis.state.messages;\n            results.push(newMsg);\n            scopeThis.setState({\n                messages: results\n            });\n\n            var msgArr = scopeThis.state.messages.filter(message => message.room === this.props.match.params.room);\n            if (msgArr.length > 3) {\n                scopeThis.scrollToBottom();\n            }\n        });\n\n        socket.on('createLocationMsg', (message) => {\n            var formattedTime = moment(message.createdDate).format('h:mm a');\n            let newMsg = {\n                url: message.url,\n                from: message.from,\n                room: message.room,\n                createdDate: formattedTime\n            }\n            let results = scopeThis.state.messages;\n            results.push(newMsg);\n            scopeThis.setState({\n                messages: results,\n                fetchingLocation: false\n            });\n        });\n\n        socket.on('disconnect', function () {\n            console.log('Connection lost from server.');\n        });\n\n    }\n\n    scrollToBottom() {\n        // selectors\n        var listHeight = document.querySelector('.messages #list ul');\n        var messagesList = document.querySelector('.messages #list');\n        var newMessage = document.querySelector('.messages #list ul li:last-child');\n        // heights\n        var messagesWrapperHeight = listHeight.clientHeight;\n        var clientHeight = messagesList.clientHeight;\n        var scrollTop = messagesList.scrollTop;\n        var scrollHeight = messagesList.scrollHeight;\n        var newMessageHeight = newMessage.offsetHeight;\n        var lastMessageHeight = newMessage.previousSibling.offsetHeight;\n\n        if (clientHeight + scrollTop + newMessageHeight + lastMessageHeight >= scrollHeight) {\n            document.querySelector('#list').scrollTo(0, messagesWrapperHeight)\n        }\n\n    }\n\n    clearForm() {\n        this.setState({\n            newMsg: ''\n        });\n    }\n\n    inputUpdate(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    newMessage(e) {\n        e.preventDefault()\n        var obj = {\n            'text': this.state.newMsg\n        };\n        socket.emit('createMessage', obj, function (data) { });\n        this.clearForm();\n    }\n\n    sendLocation() {\n        this.setState({\n            fetchingLocation: true\n        });\n        if (!navigator.geolocation) {\n            return alert('GeoLocation not supported by your browser');\n        }\n        navigator.geolocation.getCurrentPosition((pos) => {\n            socket.emit('createLocationMsg', {\n                lat: pos.coords.latitude,\n                lon: pos.coords.longitude\n            });\n        }, () => {\n            alert('Unable to fetch location');\n        });\n    }\n\n    render() {\n\n        const { newMsg } = this.state;\n\n        return (\n            <div className=\"chatPage\">\n\n                <LoadingScreen\n                    loading={this.state.fetchingLocation}\n                    bgColor='#F5F7F4'\n                    spinnerColor='#3597DE'\n                    textColor='#010000'\n                    text='Fetching your current location'\n                >\n                    <div className=\"hide\"></div>\n                </LoadingScreen>\n\n                <ActiveUsers users={this.state.users} />\n\n                <div className=\"messages_wrap\">\n\n                    <h1>\n                        <Link to=\"/\">\n                            <i className=\"fas fa-chevron-circle-left\"></i>\n                        </Link>\n                        {this.props.match.params.room}\n                    </h1>\n\n                    <Messages messages={this.state.messages} room={this.props.match.params.room} />\n\n                    <div className=\"newMsgForm\">\n                        <div className=\"wrap\">\n                            <form onSubmit={(e) => this.newMessage(e)}>\n\n                                <div className=\"form_wrap\">\n                                    <div className=\"form_row\">\n                                        <div className=\"form_item\">\n                                            <div className=\"form_input\">\n                                                <input name=\"newMsg\" placeholder=\"Type your message...\" autoComplete=\"off\" value={newMsg} onChange={this.inputUpdate.bind(this)} />\n                                                <span className=\"bottom_border\"></span>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"btnWrap\">\n                                    <button type=\"submit\" className=\"btn\">\n                                        <i className=\"fab fa-telegram-plane\"></i>\n                                    </button>\n                                    <button id=\"send_location\" className=\"btn\" onClick={() => this.sendLocation()}>\n                                        <i className=\"far fa-compass\"></i>\n                                    </button>\n                                </div>\n                            </form>\n                        </div>\n\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Chat);","import React, { Component } from 'react';\n\nclass Messages extends Component {\n    render() {\n        return (\n            <div className=\"messages\">\n                <div id=\"list\">\n                    <ul>\n                        {this.props.messages.filter(message => message.room === this.props.room).map((message, index) => (\n                            <li key={index}>\n\n                                {message.url &&\n                                    <div>\n                                        <div className=\"msg\">\n                                            <h4>{message.from}</h4>\n                                            <div className=\"body\">\n                                                <a href={message.url} rel=\"noopener noreferrer\" target=\"_blank\">My current location</a>\n                                            </div>\n                                        </div>\n                                        <span className=\"createdDate\">{message.createdDate}</span>\n                                    </div>\n                                }\n\n                                {!message.url &&\n                                    <div>\n                                        <div className=\"msg\">\n                                            <h4>{message.from}</h4>\n                                            <div className=\"body\">\n                                                <p>{message.text}</p>\n                                            </div>\n                                        </div>\n                                        <span className=\"createdDate\">{message.createdDate}</span>\n                                    </div>\n                                }\n\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Messages;","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nconst initialState = {\n    name: '',\n    room: ''\n}\n\nclass Join extends Component {\n\n    constructor() {\n        super();\n        this.state = {\n            ...initialState\n        }\n    }\n\n    clearForm() {\n        this.setState({\n            ...initialState\n        });\n    }\n\n    inputUpdate(e) {\n        const name = e.target.name;\n        const value = e.target.value;\n        this.setState({\n            [name]: value\n        });\n    }\n\n    join() {\n        const { name, room } = this.state;\n        if (name && room) {\n            this.props.history.push(`/chat/${name}/${room}`)\n        }\n    }\n\n    render() {\n\n        const { name } = this.state;\n\n        return (\n            <div className=\"joinForm\">\n\n                <div className=\"form_wrap\">\n                    <div className=\"form_row\">\n                        <div className=\"form_item\">\n                            <div className=\"form_input\">\n                                <input type=\"text\" placeholder=\"Full Name\" autoComplete=\"off\" name=\"name\" value={name} onChange={this.inputUpdate.bind(this)} />\n                                <span className=\"bottom_border\"></span>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form_row\">\n                        <div className=\"form_item\">\n                            <div className=\"form_select\">\n                                <select name=\"room\" onChange={this.inputUpdate.bind(this)}>\n                                    <option value=\"\">Please select a group</option>\n                                    <option value=\"React JS\">React JS</option>\n                                    <option value=\"Node JS\">Node JS</option>\n                                </select>\n                                <i className=\"fas fa-chevron-down\"></i>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"form_buttons\">\n                        <button onClick={() => this.join()} className=\"btn\">\n                            Join\n                        </button>\n                    </div>\n                </div>\n\n\n\n\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Join);","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport classNames from 'classnames';\nimport './assets/scss/styles.scss';\n\nimport Chat from './pages/chat';\nimport Join from './pages/join';\n\nclass App extends Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      site_loaded: false\n    }\n  }\n\n  componentDidMount() {\n    this.setState({\n      site_loaded: true\n    });\n  }\n\n  render() {\n    return (\n      <div className={classNames({'App': true, 'site_loaded': this.state.site_loaded})}>\n        <Router>\n          <Switch>\n            <Route path=\"/chat/:name/:room\" component={Chat} />\n            <Route path=\"/\" component={Join} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}